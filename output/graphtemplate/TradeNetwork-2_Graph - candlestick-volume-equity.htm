<!DOCTYPE HTML>
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
            <title>MECA TRADE REPORT</title>
            
            <script type="text/javascript" src="../graphtemplate/js/jquery.min.js"></script>
            <script src="../graphtemplate/js/highstock.js"></script>
            <script src="../graphtemplate/js/exporting.js"></script>
            
            </head>
	<body onload="readIndicatorFile();readTradefile();readfile();">
        <div id="container" style="height: 750px; min-width: 500px"></div>
        <iframe id='tradeFrame' src="TradeNetwork-2_TradeData" style="display:none"> </iframe>
        <iframe id='indicatorFrame' src = "TradeNetwork-2_IndicatorData" style="display:none"> </iframe>
        <iframe id='iframe'  src = "TradeNetwork-2_Graph" style="display:none"> </iframe>
        
        
		<script type="text/javascript">
		
            var markerString = [];
            var indicator1 = [];
            var indicator2 = [];
            var indicator3 = [];
            var indicator4 = [];
            var indicator5 = [];
            var indicator6 = [];
            var indicator7 = [];
            var indicator8 = [];
            var indicator9 = [];
            var indicator10 = [];
            var valueIndicatorNames = [];
            var percentageIndicatorNames = [];
            
             
            Highcharts.setOptions({
				global: {
					useUTC: false
				}
			});
			
			
			function readIndicatorFile() {
			    
                
                var data = eval(document.getElementById('indicatorFrame').contentDocument.body.firstChild.innerHTML);
                
                
                var indicatorLength = data[0].length-1;
               
                var indicatorSeriesIndex = [];
                
                for(j=1;j<indicatorLength+1;j++){
               
                    var lastChar = data[0][j].substring(data[0][j].length-1);

                	if ( lastChar == "p" ) {
                		percentageIndicatorNames.push(data[0][j].substring(0,data[0][j].length-2));
                		indicatorSeriesIndex[j-1] = percentageIndicatorNames.length + 4;
                	}
                	
                	else if ( lastChar == "v" ) {
                		valueIndicatorNames.push(data[0][j].substring(0,data[0][j].length-2));
                		indicatorSeriesIndex[j-1] = valueIndicatorNames.length - 1;
                	}
                	
                }
               
                
                for (i = 1; i < data.length; i++) {
                		for(k=0;k<indicatorLength;k++){
                		
                		if(data[i][k+1] != "NaN"){
	                		
		                		
		                		if(indicatorSeriesIndex[k]==5){
	                				
	                					indicator6.push([data[i][0],data[i][k+1]]);
	                				
	                			}else if(indicatorSeriesIndex[k]==6){
	                				
	                					indicator7.push([data[i][0],data[i][k+1]]);
	                				
	                			}else if(indicatorSeriesIndex[k]==7){
	                				
	                					indicator8.push([data[i][0],data[i][k+1]]);
	                				
	                			}else if(indicatorSeriesIndex[k]==8){
	                				
	                					indicator9.push([data[i][0],data[i][k+1]]);
	                				
	                			}else if(indicatorSeriesIndex[k]==9){
	                				
	                					indicator10.push([data[i][0],data[i][k+1]]);
	                				
	                			}else if(indicatorSeriesIndex[k]==0){
		                				
	                					indicator1.push([data[i][0],data[i][k+1]]);
	                				
	                			}else if(indicatorSeriesIndex[k]==1){
	                				
	                					indicator2.push([data[i][0],data[i][k+1]]);
	                				
	                			}else if(indicatorSeriesIndex[k]==2){
	                				
	                					indicator3.push([data[i][0],data[i][k+1]]);
	                				
	                			}else if(indicatorSeriesIndex[k]==3){
	                				
	                					indicator4.push([data[i][0],data[i][k+1]]);
	                				
	                			}else if(indicatorSeriesIndex[k]==4){
	                				
	                					indicator5.push([data[i][0],data[i][k+1]]);
	                				
	                			}
		                		
		                	}
                			
                		}
                  }
                  
              
            }
			
			
			
			
			
			
			
			
			
			
			function readTradefile() {
                var data = eval(document.getElementById('tradeFrame').contentDocument.body.firstChild.innerHTML);
                
                
                for (i = 0; i < data.length; i++) {
                		var colour = 'rgba(255,0,0,1)';
                		var signalType = '';
                		var tradeTypePrefix = '';
                		
                		
                		switch(data[i][7])
						{
						case 0:
						  
						  tradeTypePrefix = 'S';
						  break;
						case 1:
						   tradeTypePrefix = 'S';
						  break;
						case 2:
						   tradeTypePrefix = 'L';
						  break;
						case 3:
						   tradeTypePrefix = 'L';
						 break;
						 default:
						  ;
						}
                		
                		
                		
                		switch(data[i][3])
						{
						case 0:
						  colour = 'rgba(80,225,80,1)';
						  
						  
						  signalType = tradeTypePrefix + 'En';
						  break;
						case 1:
						   colour = 'rgba(225,80,80,1)';
						    signalType = tradeTypePrefix + 'Ex';
						  break;
						case 2:
						   colour = 'rgba(220,220,220,1)';
						    signalType = 'Pt';
						  break;
						case 3:
						   colour = 'rgba(180,180,180,1)';
						   signalType = 'Rs';
						 break;
						 
						 case 4:
						   colour = 'rgba(140,140,140,1)';
						   signalType = 'Ps';
						 break;
						 
						case 5:
						   colour = 'rgba(255,255,20,1)';
						   signalType = 'Mc';
						  break;
						 
						  case 6:
						   colour = 'rgba(170,170,20,1)';
						   signalType = 'Ss';
						 break;
						  
						  case 7:
						   colour = 'rgba(210,210,20,1)';
						    signalType = 'Em';
						  break;
						default:
						  ;
						}
						
                		
                        markerString.push({x : data[i][0], color: colour, title : signalType,text : 'P/T #: ' + data[i][1]+ '/' + data[i][2] + '<br>' + 'Lot: ' + data[i][4] + '<br>' + 'Price: ' + data[i][5] + '<br>' + 'P/L: ' + data[i][6]});
                  }
             
            }
            
            function readfile() {
         
           		
                var data = eval(document.getElementById('iframe').contentDocument.body.firstChild.innerHTML);
                
             
              
                
                // split the data set into ohlc and volume
                var ohlc = [],
                volume = [],
                equity = [],
                trade = [],
                dataLength = data.length;
                
                for (i = 0; i < dataLength; i++) {
                    ohlc.push([
                               data[i][0], // the date
                               data[i][1], // open
                               data[i][2], // high
                               data[i][3], // low
                               data[i][4] // close
                               ]);
                               
                    trade.push([
                                 data[i][0], // the date
                                 data[i][4] // the volume
                                 ]);
                    
                    volume.push([
                                 data[i][0], // the date
                                 data[i][5] // the volume
                                 ]);
                                 
                    equity.push([
                                 data[i][0], // the date
                                 data[i][6] // the volume
                                 ]);
                }
                
                var dataThreshold = 1000;
                
                // set the allowed units for data grouping
                var groupingUnits = [[
                                      'minute',                         // unit name
                                      [1,5,10,15,30]                             // allowed multiples
                                      ],[
                                          'hour',
                                          [1, 2, 3, 4, 6, 8, 9, 12]
                                          ], [
                                          'day',
                                          [1, 2, 3, 4, 5]
                                          ]];
                
                // create the chart
                $('#container').highcharts('StockChart', {
                                           
                                           rangeSelector: {
                                           selected: 1
                                           },
                                           
                                           title: {
                                           text: 'EURUSD Trade History'
                                           },
                                           
                                           yAxis: [{
                                                   title: {
                                                   text: 'OHLC'
                                                   },
                                                   height: 200,
                                                   lineWidth: 2
                                                   }, {
                                                   title: {
                                                   text: 'Volume'
                                                   },
                                                   top: 520,
                                                   height: 100,
                                                   offset: 0,
                                                   lineWidth: 2
                                                   },
                                                   {
                                                   title: {
                                                   text: 'Equity'
                                                   },
                                                   top: 400,
                                                   height: 100,
                                                   offset: 0,
                                                   lineWidth: 2
                                                   },
                                                   {
                                                   title: {
                                                   text: 'Indicator'
                                                   },
                                                   top: 280,
                                                   height: 100,
                                                   offset: 0,
                                                   lineWidth: 2
                                                   }
                                                   ],
                                                   
                                                   legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'middle',
                enabled: true,
                borderWidth: 0
            },
                                           
                                           series: [{
                                                    type: 'candlestick',
                                                    name: 'EURUSD',
                                                    data: ohlc,
                                                    turboThreshold: dataThreshold,
                                                    dataGrouping: {
                                                    units: groupingUnits
                                                    }
                                                    },
                                                    
                                                    {
                                                  
                                                    name: valueIndicatorNames[0],
                                                    data: indicator1,
                                                    turboThreshold: dataThreshold,
                                                    id : 'indicator1',
                                                    type: 'line'

                                                    },
                                                    {
                                                  
                                                    name: valueIndicatorNames[1],
                                                    data: indicator2,
                                                    turboThreshold: dataThreshold,
                                                    id : 'indicator2',
                                                    type: 'line'

                                                    },
                                                    {
                                                  
                                                    name: valueIndicatorNames[2],
                                                    data: indicator3,
                                                    turboThreshold: dataThreshold,
                                                    id : 'indicator3',
                                                    type: 'line'

                                                    },
                                                    {
                                                  
                                                    name: valueIndicatorNames[3],
                                                    data: indicator4,
                                                    turboThreshold: dataThreshold,
                                                    id : 'indicator4',
                                                    type: 'line'

                                                    },
                                                    {
                                                  
                                                    name: valueIndicatorNames[4],
                                                    data: indicator5,
                                                    turboThreshold: dataThreshold,
                                                    id : 'indicator5',
                                                    type: 'line'

                                                    },
                                                    {
                                                  
                                                    name: 'TRADE',
                                                    data: trade,
                                                    turboThreshold: dataThreshold,
                                                    id : 'trade',
                                                    type: 'line',
                                                    color: 'rgba(0,0,0,0)'

                                                    },
                                                    
                                                    {
                                                  
                                                    name: percentageIndicatorNames[0],
                                                    data: indicator6,
                                                    turboThreshold: dataThreshold,
                                                    id : 'indicator6',
                                                    yAxis: 3,
                                                    type: 'line'

                                                    },
                                                    {
                                                  
                                                    name: percentageIndicatorNames[1],
                                                    data: indicator7,
                                                    turboThreshold: dataThreshold,
                                                    id : 'indicator7',
                                                    yAxis: 3,
                                                    type: 'line'

                                                    },
                                                    {
                                                  
                                                    name: percentageIndicatorNames[2],
                                                    data: indicator8,
                                                    turboThreshold: dataThreshold,
                                                    id : 'indicator8',
                                                    yAxis: 3,
                                                    type: 'line'

                                                    },
                                                    {
                                                  
                                                    name: percentageIndicatorNames[3],
                                                    data: indicator9,
                                                    turboThreshold: dataThreshold,
                                                    id : 'indicator9',
                                                    yAxis: 3,
                                                    type: 'line'

                                                    },
                                                    {
                                                  
                                                    name: percentageIndicatorNames[4],
                                                    data: indicator10,
                                                    turboThreshold: dataThreshold,
                                                    id : 'indicator10',
                                                    yAxis: 3,
                                                    type: 'line',
                                                    dataGrouping: {
                                                    units: groupingUnits
                                                    }
                                                    },
                                                    
                                                    {
                                                    name: 'EQUITY',
                                                    data: equity,
                                                    turboThreshold: dataThreshold,
                                                    yAxis: 2,
                                                    dataGrouping: {
                                                    units: groupingUnits
                                                    }
                                                    },
                                                    {
                                                    type: 'column',
                                                    name: 'VOLUME',
                                                    data: volume,
                                                    turboThreshold: dataThreshold,
                                                    yAxis: 1,
                                                    dataGrouping: {
                                                    units: groupingUnits
                                                    }
                                                    },
                                                    
                                                    
                                                   // the event marker flags
							{
								type : 'flags',
								data : markerString,
								turboThreshold: dataThreshold,
								onSeries : 'trade',
								shape : 'circlepin',
								width : 16
							}
										                                                    
                                                    
                                                    ]
                                           });
            }
            
            
            </script>
        
        
	</body>
</html>
